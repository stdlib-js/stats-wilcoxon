// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import{primitives as e}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number-array@v0.1.0-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-typed-array-like@v0.1.0-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-read-only-property@v0.1.1-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.1.0-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-ranks@v0.1.0-esm/index.mjs";import{factory as n}from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-normal-cdf@v0.1.0-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-signrank-cdf@v0.1.0-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-tabulate@v0.1.0-esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-signum@v0.1.1-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-sqrt@v0.1.1-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-abs@v0.1.1-esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/array-float64@v0.1.1-esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";import c from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-contains@esm/index.mjs";import{isPrimitive as f}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@v0.1.1-esm/index.mjs";import{isPrimitive as u}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@v0.1.1-esm/index.mjs";import{isPrimitive as v}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string@v0.1.1-esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nan@v0.1.1-esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.1.1-esm/index.mjs";import b from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-integer@v0.1.0-esm/index.mjs";import w from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-roundn@v0.1.0-esm/index.mjs";var x=["two-sided","less","greater"],y=["pratt","wilcox","zsplit"];function E(e,t){if(!s(t))return new TypeError(h("invalid argument. Options argument must be an object. Value: `%s`.",t));if(j(t,"alpha")){if(e.alpha=t.alpha,!u(e.alpha)||g(e.alpha))return new TypeError(h("invalid option. `%s` option must be a number. Option: `%s`.","alpha",e.alpha));if(e.alpha<0||e.alpha>1)return new RangeError(h("invalid option. `%s` option must be a number on the interval: [0, 1]. Option: `%f`.","alpha",e.alpha))}if(j(t,"alternative")){if(e.alternative=t.alternative,!v(e.alternative))return new TypeError(h("invalid option. `%s` option must be a string. Option: `%s`.","alternative",e.alternative));if(!c(x,e.alternative))return new Error(h('invalid option. `%s` option must be one of the following: "%s". Option: `%s`.',"alternative",x.join('", "'),e.alternative))}if(j(t,"correction")&&(e.correction=t.correction,!f(e.correction)||g(e.correction)))return new TypeError(h("invalid option. `%s` option must be a boolean. Option: `%s`.","correction",e.alpha));if(j(t,"exact")&&(e.exact=t.exact,!f(e.exact)||g(e.exact)))return new TypeError(h("invalid option. `%s` option must be a boolean. Option: `%s`.","exact",e.alpha));if(j(t,"mu")&&(e.mu=t.mu,!u(e.mu)||g(e.mu)))return new TypeError(h("invalid option. `%s` option must be a number. Option: `%s`.","mu",e.mu));if(j(t,"zeroMethod")){if(e.zeroMethod=t.zeroMethod,!v(e.zeroMethod))return new TypeError(h("invalid option. `%s` option must be a string. Option: `%s`.","zeroMethod",e.alternative));if(!c(y,e.zeroMethod))return new Error(h('invalid option. `%s` option must be one of the following: "%s". Option: `%s`.',"zeroMethod",y.join('", "'),e.zeroMethod))}return null}function O(e,t){return e-t}function T(e){var t,i,s,r;for((e=e.slice()).sort(O),t=e.length,s=1,r=0;s<t;s++)i=e[s],e[r]!==i&&(e[r+=1]=i);return e.length=r+1,e}function z(e){var t,i,r;if(i=4,t=!0,arguments.length>0){if(!s(e))throw new TypeError(h("invalid argument. First argument must be an object. Value: `%s`.",e));if(j(e,"digits")){if(!b(e.digits))throw new TypeError(h("invalid option. `%s` option must be a positive integer. Option: `%s`.","digits",e.digits));i=e.digits}if(j(e,"decision")){if(!f(e.decision))throw new TypeError(h("invalid option. `%s` option must be a boolean. Option: `%s`.","decision",e.decision));t=e.decision}}switch(r="",r+=this.method,r+="\n\n",r+="Alternative hypothesis: ","Paired Wilcoxon signed rank test"===this.method?r+="Median of the difference `x - y` is ":r+="Median of `x` is ",this.alternative){case"less":r+="less than ";break;case"greater":r+="greater than ";break;default:r+="not equal to "}return r+=this.nullValue,r+="\n\n",r+="    pValue: "+w(this.pValue,-i)+"\n",r+="    statistic: "+w(this.statistic,-i)+"\n",r+="\n",t&&(r+="Test Decision: ",this.rejected?r+="Reject null in favor of alternative at "+100*this.alpha+"% significance level":r+="Fail to reject null in favor of alternative at "+100*this.alpha+"% significance level",r+="\n"),r}var M=n(0,1);function V(){var n,c,f,u,v,g,j,b,w,x,y,O,V,k,F,P,q,R,W,A,D,S,B,C,G,H,I,J,K;if(!t(J=arguments[0])&&!e(J))throw new TypeError(h("invalid argument. First argument must be a numeric array. Value: `%s`.",J));if(P=J.length,arguments.length>1)if(s(arguments[1]))f=arguments[1];else{if(!t(K=arguments[1])&&!e(K))throw new TypeError(h("invalid argument. `%s` argument must be a numeric array. Value: `%s`.","y",K));if(P!==K.length)throw new Error("invalid arguments. First and second arguments must have the same length.");arguments.length>2&&(f=arguments[2])}if(O={},f&&(F=E(O,f)))throw F;if(A=O.mu||0,n=void 0===O.correction||O.correction,x=void 0===O.alpha?.05:O.alpha,P<2)throw new Error(h("invalid argument. First argument must contain at least two elements. Value: `%s`.",J));if(k=O.alternative||"two-sided","wilcox"===(c=O.zeroMethod||"wilcox")){if(B=[],K)for(C=0;C<P;C++)0!==(I=J[C]-K[C]-A)&&B.push(I);else for(C=0;C<P;C++)0!==J[C]&&B.push(J[C]-A);b=J.length-B.length}else if(B=new p(P),b=0,K)for(C=0;C<P;C++)B[C]=J[C]-K[C]-A,0===B[C]&&(b+=1);else for(C=0;C<P;C++)B[C]=J[C]-A,0===B[C]&&(b+=1);if(b===P)throw new Error("`x` or `x - y` cannot be zero for all elements.");for(P=B.length,W=new p(P),C=0;C<P;C++)W[C]=m(B[C]);for(G=r(W),j=0,w=0,C=0;C<P;C++)B[C]>0?j+=G[C]:0===B[C]&&(w+=G[C]);if(u=T(G).length!==G.length,"zsplit"===c&&(j+=w/2),H=j,D=P*(P+1)*.25,S=P*(P+1)*(2*P+1),"pratt"===c){for(q=[],C=0;C<P;C++)0!==B[C]&&q.push(G[C]);G=q,D-=b*(b+1)*.25,S-=b*(b+1)*(2*b+1)}for(v=a(G),g=0,C=0;C<v.length;C++)v[C][1]>1&&(g+=(I=v[C][1])*(I*I-1));if(g>0&&(S-=.5*g),S=d(S/24),P>50&&!O.exact||b>0||u){if(B=0,n)switch(k){case"two-sided":B=.5*l(H-D);break;case"less":B=-.5;break;default:B=.5}V=(H-D-B)/S,y="two-sided"===k?2*(1-M(m(V))):"greater"===k?1-M(V):M(V)}else V=H,y="two-sided"===k?V>P*(P+1)/4?2*(1-o(V-1,P)):2*o(V,P):"greater"===k?1-o(V-1,P):o(V,P);return i(R={},"rejected",y<=x),i(R,"alpha",x),i(R,"pValue",y),i(R,"statistic",H),i(R,"nullValue",A),i(R,"alternative",k),i(R,"method",(K?"Paired":"One-Sample")+" Wilcoxon signed rank test"),i(R,"print",z),R}export{V as default};
//# sourceMappingURL=index.mjs.map
